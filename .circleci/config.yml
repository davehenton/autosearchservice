#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    environment:
        # Customize the JVM maximum heap limit
        JVM_OPTS: -Xmx3200m
        TERM: dumb
        CC_TEST_REPORTER_ID: 730ea5b545a711f4850d0c3e6dfcc60569cc5d62ac8cde7c264dbdbd53ec0080
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests!
      - run:
          name: Build and run test
          command: |
            gradle clean build jacocoTestReport;
      - run:
          name: Upload Code Coverage to CodeClimate
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            mkdir -p artifacts/core;cp -af core/build/reports/* artifacts/core;
            mkdir -p artifacts/infrastructure;cp -af infrastructure/build/reports/* artifacts/infrastructure;
            mkdir -p /home/circleci/repo/test-results/core;cp -af core/build/reports/* /home/circleci/repo/test-results/core;
            mkdir -p /home/circleci/repo/test-results/infrastructure;cp -af infrastructure/build/reports/* /home/circleci/repo/test-results/infrastructure;
            mkdir -p coverage
            JACOCO_SOURCE_PATH=core/src/main/java ./cc-test-reporter format-coverage core/build/reports/jacoco/jacoco.xml --input-type jacoco --output coverage/codeclimate.core.json;
            JACOCO_SOURCE_PATH=infrastructure/src/main/java ./cc-test-reporter format-coverage infrastructure/build/reports/jacoco/jacoco.xml --input-type jacoco --output coverage/codeclimate.infrastructure.json;
            ./cc-test-reporter sum-coverage coverage/codeclimate.*.json
            ./cc-test-reporter upload-coverage  --input coverage/codeclimate.json
      - store_artifacts:
          path: artifacts
      - store_test_results:
          path: test-results
